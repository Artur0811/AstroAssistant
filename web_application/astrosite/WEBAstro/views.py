import datetime
from io import StringIO

from django.contrib.auth import logout
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth.views import LoginView
from django.shortcuts import render, redirect
from django.http import HttpResponse, HttpResponseNotFound


# Create your views here.
from django.urls import reverse_lazy
from django.views.generic import CreateView

from WEBAstro.astoprogramm import *
from WEBAstro.forms import *

import os

from astrosite.settings import MEDIA_ROOT

menu = [
    {"title":"О сайте", "url":"about"},
    {"title":"Приложение", "url":"astroassistant"},
]




def main_page(request):
    if request.method == "POST":
        if request.POST.get("req"):
            form = RequestForm(request.POST)
            if form.is_valid():
                values = form.cleaned_data

                o = OtherName(values["coordinates"])
                o_names = o.getname()
                periodic, maximum = is_periodic(values["star_type_value"])
                name = values["name"]
                ztf = ZTF_Points(values["coordinates"]).points()
                r_data = ztf['ZTF r']
                g_data = ztf['ZTF g']
                magn = ztf['magn']
                eclipse = None
                if r_data != [] or g_data != []:
                    per, epoch = None, None
                    if periodic:
                        per, epoch = Lafler_clinman(max(r_data, g_data, key=lambda x: len(x)), maximum)
                        r_data = make_LightCurve_with_per(r_data, per, epoch)
                        g_data = make_LightCurve_with_per(g_data, per, epoch)
                        if not maximum:
                            eclipse = eclipse_percent(max(r_data, g_data, key=lambda x: len(x)))
                    data_light = []
                    if r_data != []:
                        data_light.append([r_data, "ZTF r"])
                    if g_data != []:
                        data_light.append([g_data, "ZTF g"])
                    grf = makeGrapf(data_light, name, periodic).make()


                # o_names = ['URAT1 435-268848', '2MASS J18404215-0307165', 'WISE J184042.14-030716.5']
                # magn = {'min': '21.547 r', 'max': '18.266 r'}
                # per, epoch = 478.4688995, 59385.336

                tame = datetime.date.today()
                save_dir = os.path.join(MEDIA_ROOT, "curve\{}\{}\{}".format(tame.year, tame.month, tame.day))
                if not os.path.exists(os.path.join(MEDIA_ROOT, "curve\{}\{}\{}".format(tame.year, tame.month, tame.day))):
                    os.makedirs(os.path.join(MEDIA_ROOT, "curve\{}\{}\{}".format(tame.year, tame.month, tame.day)))

                # a = [[58218.488148, 17.861], [58218.508518, 17.873], [58230.478171, 17.964], [58246.442662, 17.901],
                #      [58249.47368, 17.938], [58259.444629, 17.868], [58262.380555, 17.93], [58266.396238, 17.936],
                #      [58269.418182, 17.872], [58273.419224, 17.903], [58276.424351, 17.91], [58279.402326, 17.944],
                #      [58282.442465, 17.833], [58288.443171, 17.912], [58291.316365, 17.939], [58297.409386, 17.852],
                #      [58300.376064, 17.901], [58310.379999, 17.881], [58320.357997, 17.907], [58323.230682, 17.869],
                #      [58326.336134, 17.942], [58329.336365, 17.883], [58332.316782, 17.934], [58338.331296, 17.865],
                #      [58341.209791, 17.87], [58341.256955, 17.908], [58341.257881, 17.89], [58341.258796, 17.863],
                #      [58341.259722, 17.869], [58341.260648, 17.859], [58341.261562, 17.858], [58341.262488, 17.893],
                #      [58341.263414, 17.865], [58341.264328, 17.872], [58341.265254, 17.852], [58341.26618, 17.888],
                #      [58341.267106, 17.88], [58341.26802, 17.903], [58341.268946, 17.864],
                #      [58341.269872, 17.881], [58341.270798, 17.907], [58341.271713, 17.851], [58341.272638, 17.906],
                #      [58341.273564, 17.845], [58341.274479, 17.892], [58341.275405, 17.911], [58341.276331, 17.916],
                #      [58341.277256, 17.908], [58341.278171, 17.9], [58341.279097, 17.888], [58341.280023, 17.907],
                #      [58341.280937, 17.912], [58341.281863, 17.904], [58341.282789, 17.9], [58341.283715, 17.901],
                #      [58341.284629, 17.948], [58341.285555, 17.919], [58341.286481, 17.939], [58341.287395, 17.897],
                #      [58341.288321, 17.921], [58341.289247, 17.897], [58341.290173, 17.905], [58341.291087, 17.923],
                #      [58341.292013, 17.911], [58341.292939, 17.908], [58341.293865, 17.925], [58341.29478, 17.922],
                #      [58341.295705, 17.921], [58341.296631, 17.898], [58341.297546, 17.934], [58341.298472, 17.946],
                #      [58341.299398, 17.894], [58341.300324, 17.898], [58341.301238, 17.942], [58341.302164, 17.925],
                #      [58341.30309, 17.971], [58341.304004, 17.933], [58341.30493, 17.897]
                #     , [58341.305856, 17.926], [58341.326273, 17.937], [58342.199456, 17.92], [58342.200381, 17.929],
                #      [58342.201296, 17.994], [58342.202222, 17.929], [58342.203148, 17.931], [58342.204062, 17.901],
                #      [58342.204988, 17.907], [58342.205914, 17.961], [58342.20684, 17.934], [58342.207754, 17.944],
                #      [58342.20868, 17.873], [58342.209606, 17.92], [58342.21052, 17.886], [58342.211446, 17.955],
                #      [58342.212372, 17.929], [58342.213298, 17.929], [58342.214212, 17.916], [58342.215138, 17.899],
                #      [58342.216064, 17.976], [58342.21699, 17.91], [58342.217905, 17.934], [58342.21883, 17.909],
                #      [58342.219756, 17.955], [58342.220671, 17.874], [58342.221597, 17.913], [58342.222523, 17.941],
                #      [58342.223437, 17.913], [58342.224363, 17.929], [58342.225289, 17.89], [58342.226215, 17.917],
                #      [58342.227129, 17.942], [58342.228055, 17.93], [58342.228981, 17.903], [58342.229907, 17.909],
                #      [58342.230821, 17.926], [58342.231747, 17.901], [58342.232673, 17.921],
                #      [58342.233588, 17.929], [58342.234513, 17.886], [58342.235439, 17.888], [58342.236365, 17.914],
                #      [58342.23728, 17.927], [58342.238206, 17.898], [58342.239131, 17.874], [58342.240046, 17.916],
                #      [58342.240972, 17.887], [58342.241898, 17.895], [58342.242824, 17.913], [58342.243738, 17.874],
                #      [58342.244664, 17.904], [58342.24559, 17.91], [58342.246516, 17.931], [58342.24743, 17.868],
                #      [58342.248356, 17.893], [58342.249282, 17.884], [58342.250208, 17.898], [58342.251122, 17.898],
                #      [58342.252048, 17.91], [58342.252974, 17.89], [58342.253888, 17.903], [58342.254814, 17.874],
                #      [58342.25574, 17.864], [58342.256655, 17.919], [58342.25758, 17.901], [58342.258506, 17.856],
                #      [58342.259432, 17.912], [58342.260347, 17.867], [58342.261273, 17.885], [58342.262199, 17.871],
                #      [58342.263113, 17.907], [58342.264039, 17.898], [58342.264965, 17.886], [58342.265879, 17.937],
                #      [58342.266805, 17.888], [58342.267731, 17.899], [58342.268657, 17.841],
                #      [58342.269571, 17.869], [58342.270497, 17.858], [58342.271423, 17.883], [58342.272349, 17.863],
                #      [58342.273263, 17.858], [58342.274189, 17.918], [58342.275115, 17.889], [58342.27603, 17.865],
                #      [58342.276956, 17.914], [58342.277881, 17.887], [58342.278807, 17.897], [58342.279722, 17.852],
                #      [58342.280648, 17.903], [58342.281574, 17.857], [58342.282488, 17.907], [58342.283414, 17.901],
                #      [58342.28434, 17.885], [58342.285266, 17.96], [58342.28618, 17.899], [58342.287106, 17.884],
                #      [58342.288032, 17.886], [58342.288946, 17.889], [58342.289872, 17.897], [58342.290798, 17.893],
                #      [58342.291724, 17.854], [58342.292638, 17.879], [58342.293564, 17.877], [58342.29449, 17.901],
                #      [58342.295405, 17.866], [58342.29633, 17.858], [58342.297256, 17.877], [58342.298182, 17.897],
                #      [58342.299097, 17.84], [58342.300023, 17.915], [58342.300949, 17.858], [58342.301874, 17.895],
                #      [58342.302789, 17.894], [58342.303715, 17.842], [58342.304641, 17.903],
                #      [58342.305555, 17.881], [58344.312326, 17.873], [58348.216794, 18.032], [58351.211192, 17.902],
                #      [58354.252581, 18.273], [58354.369548, 18.651], [58357.207951, 17.946], [58357.306585, 17.911],
                #      [58360.251169, 17.885], [58363.23155, 18.002], [58366.183402, 17.89], [58369.20618, 17.913],
                #      [58372.172164, 17.903], [58378.25309, 17.982], [58384.16809, 17.918], [58387.148101, 18.075],
                #      [58423.088437, 17.873], [58426.104097, 17.972], [58429.087164, 17.894], [58468.074791, 17.875],
                #      [58468.079745, 17.78], [58468.084687, 17.844], [58468.089641, 17.835], [58469.074293, 17.869],
                #      [58469.079201, 17.884], [58469.084108, 17.862], [58469.089016, 17.865], [58471.079398, 17.736],
                #      [58471.084305, 17.853], [58471.089224, 18.067], [58472.083472, 17.846], [58472.088333, 17.851],
                #      [58473.07412, 18.252], [58473.078993, 18.188], [58473.083854, 18.133], [58473.088715, 17.985],
                #      [58474.074432, 17.825], [58474.079502, 17.968], [58474.084571, 17.855]
                #     , [58474.089629, 17.888], [58475.073888, 18.013], [58475.078796, 18.123], [58475.083703, 18.005],
                #      [58475.088611, 17.963], [58574.483067, 18.011], [58585.444085, 17.878], [58588.420844, 17.894],
                #      [58591.478483, 17.95], [58597.456319, 17.837], [58607.386192, 18.033], [58616.420231, 17.889],
                #      [58619.418402, 17.803], [58628.401411, 17.975], [58633.423055, 17.87], [58639.402824, 19.985],
                #      [58642.44155, 17.819], [58645.470972, 17.921], [58648.473611, 17.893], [58651.421435, 17.877],
                #      [58655.3778, 17.958], [58657.39912, 17.866], [58658.382974, 17.918], [58660.464814, 17.856],
                #      [58661.353518, 17.908], [58662.32155, 17.895], [58663.354594, 17.93], [58665.293564, 19.427],
                #      [58665.294016, 19.485], [58665.323969, 20.046], [58665.324421, 20.043], [58665.423182, 17.942],
                #      [58666.300416, 17.842], [58666.300868, 17.866], [58666.324328, 17.902], [58666.32478, 17.853],
                #      [58674.301805, 17.903], [58677.311342, 17.859], [58680.327708, 19.835],
                #      [58684.447523, 19.522], [58688.375069, 17.901], [58691.377789, 17.898], [58694.261689, 17.879],
                #      [58694.262141, 17.824], [58694.292777, 17.976], [58694.293229, 17.866], [58694.339363, 17.845],
                #      [58697.380451, 17.98], [58700.393981, 17.851], [58703.23162, 17.912], [58703.232071, 17.927],
                #      [58703.238935, 17.927], [58703.242997, 17.924], [58703.253784, 17.9], [58703.270185, 17.9],
                #      [58703.270636, 17.925], [58703.403807, 17.864], [58706.391562, 17.877], [58713.232905, 18.001],
                #      [58715.1725, 18.078], [58715.172951, 17.989], [58715.191886, 17.978], [58715.202812, 17.958],
                #      [58715.210775, 18.019], [58715.227847, 17.871], [58715.228298, 17.935], [58716.197002, 17.888],
                #      [58716.197453, 17.862], [58716.207326, 17.905], [58716.208287, 17.858], [58716.21074, 17.883],
                #      [58716.215463, 17.876], [58716.219155, 17.912], [58716.231724, 17.889], [58716.236504, 17.928],
                #      [58716.250937, 17.879], [58716.251388, 17.885], [58716.371053, 17.846],
                #      [58717.179224, 19.928], [58717.179675, 19.963], [58717.184884, 19.491], [58717.185798, 19.54],
                #      [58717.19265, 19.193], [58717.194571, 19.113], [58717.19728, 19.092], [58717.200405, 19.049],
                #      [58717.204201, 18.897], [58717.208101, 18.678], [58717.23743, 18.193], [58717.23787, 18.173],
                #      [58718.196388, 17.943], [58718.19684, 17.972], [58718.204108, 17.922], [58718.205127, 17.947],
                #      [58718.21199, 17.903], [58718.214074, 17.946], [58718.221284, 17.928], [58718.234259, 17.906],
                #      [58718.247245, 17.958], [58718.253009, 17.923], [58718.25346, 17.894], [58719.1703, 17.999],
                #      [58719.170752, 18.021], [58719.195162, 18.074], [58719.195613, 18.134], [58719.201851, 18.068],
                #      [58719.21515, 18.071], [58719.222511, 18.102], [58719.223645, 18.145], [58719.224097, 18.108],
                #      [58719.229594, 18.085], [58719.230046, 18.08], [58719.316134, 17.877], [58720.189895, 17.904],
                #      [58720.201354, 17.875], [58720.211909, 17.885], [58720.219178, 17.893], [58720.22603, 17.89],
                #      [58720.22758, 17.863], [58720.230046, 17.884], [58720.238148, 17.891], [58720.242488, 17.872],
                #      [58720.250289, 17.869], [58720.25074, 17.877], [58721.168877, 18.249], [58721.16934, 18.596],
                #      [58721.180879, 18.38], [58721.189976, 18.508], [58721.191967, 18.618], [58721.195185, 18.674],
                #      [58721.196712, 18.714], [58721.202129, 18.756], [58721.218692, 19.479], [58722.168634, 17.893],
                #      [58722.181585, 17.918], [58722.184502, 17.899], [58722.187974, 17.938], [58722.190416, 17.997],
                #      [58722.192499, 17.91], [58722.200231, 17.919], [58722.208784, 17.927], [58722.212592, 17.912],
                #      [58722.224236, 17.954], [58722.233229, 17.93], [58722.23368, 17.927], [58722.307893, 17.822],
                #      [58723.202037, 17.855], [58723.202488, 17.793], [58723.22265, 17.88], [58723.246273, 17.953],
                #      [58723.246724, 17.948], [58724.205937, 17.895], [58724.206388, 17.865], [58724.223437, 17.86],
                #      [58724.249814, 17.87], [58724.250266, 17.851], [58726.17831, 18.015], [58726.178761, 17.946],
                #      [58726.193715, 17.906], [58726.201388, 17.917], [58726.205625, 17.943], [58726.206527, 17.981],
                #      [58726.208993, 17.966], [58726.220462, 17.954], [58726.22618, 17.907], [58726.233298, 17.945],
                #      [58726.233738, 17.935], [58727.199895, 17.896], [58727.200347, 17.884], [58727.214421, 17.876],
                #      [58727.227465, 17.835], [58727.228541, 17.884], [58727.23302, 17.865], [58727.234039, 17.884],
                #      [58727.237523, 17.874], [58727.238877, 17.876], [58727.241319, 17.884], [58727.242453, 17.876],
                #      [58727.256955, 17.864], [58727.257419, 17.847], [58730.149074, 17.999], [58730.170671, 17.934],
                #      [58730.171122, 17.975], [58730.184398, 17.965], [58730.186469, 17.932], [58730.191724, 17.942],
                #      [58730.204224, 17.912], [58730.206226, 17.966], [58730.218888, 17.792], [58730.2253, 17.84],
                #      [58731.196273, 17.873], [58731.196736, 17.893], [58731.214838, 17.922], [58731.215289, 17.809],
                #      [58731.218205, 17.896], [58731.219733, 17.915], [58731.222638, 17.77], [58731.22758, 17.812],
                #      [58731.228032, 17.859], [58733.231759, 17.882], [58749.267962, 17.977], [58754.12809, 17.93],
                #      [58757.218784, 17.817], [58758.122708, 18.97], [58761.128449, 17.826], [58771.091111, 17.937],
                #      [58781.097881, 17.846], [58785.090347, 17.871], [58796.095405, 17.941], [58812.093588, 17.921],
                #      [58836.073472, 17.861], [58836.078402, 17.903], [58836.083333, 17.882], [58836.088263, 17.866],
                #      [58838.072997, 17.819], [58838.077847, 17.873], [58838.082696, 17.868], [58838.087534, 17.818],
                #      [58895.549247, 18.08], [58895.55412, 18.034], [58895.559004, 17.94], [58895.563888, 18.01],
                #      [58899.546967, 17.843], [58899.551944, 17.865], [58899.556921, 17.951], [58899.561909, 17.934],
                #      [58903.543414, 17.883], [58903.548599, 17.897], [58903.553773, 17.87], [58903.558958, 17.901],
                #      [58913.539895, 18.725], [58913.54493, 18.944], [58913.549965, 19.161], [58940.507314, 17.824],
                #      [58944.520358, 17.946], [58956.499455, 17.881], [58966.473854, 17.922], [58969.444745, 18.843],
                #      [58972.433599, 17.934], [58975.45662, 17.926], [58981.447754, 17.854], [58986.464699, 17.852],
                #      [58992.451666, 17.866], [58995.454212, 19.541], [58997.47625, 18.073], [58998.462766, 17.941],
                #      [59001.456828, 17.864], [59004.311967, 18.016], [59010.345972, 18.22], [59013.349213, 17.884],
                #      [59019.374155, 17.994], [59025.378611, 18.581], [59032.337419, 18.179], [59035.335196, 17.904],
                #      [59038.35574, 18.073], [59041.294664, 18.386], [59042.393449, 17.91], [59043.33331, 17.96],
                #      [59048.348124, 17.899], [59050.296354, 17.835], [59053.314247, 17.921], [59057.352627, 17.889],
                #      [59060.28905, 17.941], [59061.287141, 17.86], [59069.240868, 17.905], [59072.206747, 17.832],
                #      [59075.296284, 17.928], [59078.289467, 17.836], [59078.326955, 17.852], [59081.357465, 19.937],
                #      [59084.277303, 17.873], [59085.206226, 17.867], [59087.253113, 17.877], [59094.313946, 18.073],
                #      [59098.184675, 17.803], [59107.257881, 19.633], [59110.236585, 17.879], [59113.146064, 17.812],
                #      [59113.163437, 17.819], [59123.25353, 17.946], [59125.109062, 17.968], [59127.112094, 18.069],
                #      [59129.111666, 19.924], [59131.109791, 17.976], [59135.142858, 17.825], [59137.12346, 17.931],
                #      [59139.140856, 17.844], [59141.125011, 17.867], [59145.12059, 17.842], [59150.198425, 18.261],
                #      [59152.174131, 17.843], [59154.141145, 17.835], [59157.107847, 17.964], [59164.123657, 17.865],
                #      [59167.088807, 17.869], [59169.144131, 17.935], [59171.072465, 17.85], [59173.082754, 17.847],
                #      [59180.09728, 17.965], [59182.097129, 17.966], [59184.094409, 17.812], [59186.09721, 17.977],
                #      [59188.095682, 17.891], [59190.118969, 17.847], [59197.071736, 17.847], [59197.076446, 17.971],
                #      [59197.081157, 17.832], [59197.085856, 17.868], [59197.090555, 17.842], [59198.073703, 17.897],
                #      [59198.078414, 17.99], [59198.083136, 17.885], [59198.087858, 17.858], [59198.092592, 17.881],
                #      [59199.071261, 17.965], [59199.075972, 17.793], [59199.080682, 17.878], [59199.085381, 18.115],
                #      [59199.090092, 18.083], [59200.079536, 19.121], [59200.084236, 18.87], [59200.088935, 18.688],
                #      [59202.07309, 18.139], [59202.079861, 18.127], [59203.072453, 18.042], [59203.07721, 17.878],
                #      [59203.081956, 17.89], [59203.086712, 17.847], [59203.091458, 17.876], [59204.084432, 18.855],
                #      [59204.086875, 18.907], [59204.089317, 19.15], [59204.091759, 19.27], [59204.094201, 19.175],
                #      [59205.083993, 17.789], [59205.086446, 17.849], [59205.088888, 17.848], [59205.091331, 17.87],
                #      [59205.093773, 17.845], [59256.562905, 17.887], [59256.565289, 17.843], [59256.567673, 17.931],
                #      [59258.560902, 17.879], [59258.563263, 17.813], [59262.558715, 17.871], [59262.561145, 17.819],
                #      [59262.563564, 17.866], [59263.560185, 18.138], [59263.562615, 18.024], [59263.565034, 18.152],
                #      [59264.555335, 17.877], [59264.557766, 17.812], [59264.560196, 17.849], [59264.562627, 17.825],
                #      [59265.554814, 19.228], [59265.557175, 19.225], [59265.561932, 18.992], [59267.55618, 18.064],
                #      [59268.554895, 17.859], [59268.557291, 17.865], [59268.559675, 17.821], [59274.534456, 18.14],
                #      [59274.537442, 18.183], [59274.540439, 18.0], [59274.543437, 17.892], [59275.53258, 17.847],
                #      [59275.53552, 17.925], [59275.53846, 17.927], [59275.541411, 17.915], [59275.546249, 17.868],
                #      [59276.533275, 17.976], [59276.536203, 17.903], [59276.539131, 17.9], [59276.54206, 17.835],
                #      [59276.544988, 17.904], [59278.535509, 18.048], [59278.538483, 18.019], [59278.541446, 18.059],
                #      [59278.544409, 17.944], [59278.547384, 17.974], [59280.530034, 20.05], [59280.5325, 19.767],
                #      [59280.534965, 20.082], [59280.537442, 19.927], [59300.468287, 17.931], [59303.466597, 17.99],
                #      [59306.501631, 18.331], [59309.499178, 17.882], [59315.455023, 17.887], [59317.4578, 17.892],
                #      [59320.4839, 17.838], [59322.482048, 17.844], [59329.445995, 17.9], [59335.479004, 17.849],
                #      [59338.47824, 18.011], [59340.419004, 17.899], [59342.44206, 17.901], [59345.462291, 17.876],
                #      [59349.460567, 17.948], [59353.443692, 17.938], [59356.402199, 17.851], [59359.40243, 17.872],
                #      [59364.439525, 18.027], [59366.413275, 19.076], [59368.412256, 17.931], [59370.442963, 17.93],
                #      [59373.399479, 17.922], [59378.39927, 17.853], [59380.380405, 17.738], [59382.360451, 17.818],
                #      [59385.377673, 17.878], [59387.423125, 17.863], [59391.317372, 17.781], [59393.415625, 17.819],
                #      [59397.372696, 17.776], [59400.339699, 17.861], [59402.382118, 17.896], [59404.310243, 17.805],
                #      [59406.338657, 17.616], [59408.331053, 17.848], [59410.379409, 17.883], [59412.361284, 17.883],
                #      [59415.364479, 17.853], [59418.3703, 18.029], [59422.387303, 20.026], [59424.318425, 17.896],
                #      [59427.333761, 17.857], [59430.256064, 17.824], [59435.265868, 17.879], [59440.234455, 17.891],
                #      [59442.238333, 17.869], [59447.234733, 17.906], [59452.256203, 17.862], [59454.252743, 17.839],
                #      [59458.250196, 17.853], [59460.248692, 17.803], [59462.246516, 17.858], [59466.183912, 17.906],
                #      [59468.212291, 17.881], [59470.187905, 18.229], [59473.25574, 17.836], [59477.215578, 17.861],
                #      [59479.242986, 17.851], [59483.174525, 17.876], [59485.21434, 18.027], [59502.183611, 18.048],
                #      [59504.14015, 18.027], [59510.163726, 17.822], [59512.14125, 17.899], [59520.205289, 17.806],
                #      [59522.16603, 17.894], [59526.109224, 18.419], [59529.165231, 17.816], [59537.144953, 17.861],
                #      [59540.181018, 17.942], [59543.10353, 17.986], [59621.563796, 19.559], [59622.558437, 17.932],
                #      [59622.560856, 17.975], [59622.563275, 17.967], [59622.565694, 17.787], [59622.568113, 17.9],
                #      [59623.559108, 18.05], [59623.561516, 18.028], [59623.563911, 18.104], [59623.566319, 18.093],
                #      [59624.557615, 17.831], [59624.560023, 17.844], [59624.562442, 17.863], [59624.564872, 17.891],
                #      [59624.567291, 17.871], [59625.557418, 18.529], [59625.559895, 18.351], [59625.562361, 18.399],
                #      [59627.559548, 18.096], [59627.562013, 17.827], [59628.554108, 17.887], [59628.556574, 17.853],
                #      [59628.559039, 17.883], [59628.561516, 18.02], [59628.563993, 17.849], [59629.554039, 17.818],
                #      [59629.556504, 17.899], [59629.558981, 17.829], [59629.561458, 17.916], [59629.563935, 17.859],
                #      [59630.552025, 17.826], [59630.554502, 17.871], [59630.556979, 17.787], [59630.559456, 17.777],
                #      [59630.561921, 17.884], [59639.532534, 18.042], [59639.535138, 17.966], [59639.537743, 18.13],
                #      [59639.540347, 17.892], [59639.542939, 18.051], [59640.530902, 17.873], [59640.533425, 17.962],
                #      [59640.535937, 17.923], [59640.53846, 17.997], [59640.540995, 17.983], [59641.531979, 17.864],
                #      [59641.534502, 17.84], [59641.537025, 17.85], [59641.53956, 17.891], [59641.542094, 17.823],
                #      [59670.466493, 17.844], [59673.499479, 17.913], [59676.493935, 18.08], [59683.42912, 17.943],
                #      [59689.452719, 18.12], [59694.478587, 18.133], [59700.434166, 17.855], [59702.429814, 17.9],
                #      [59708.351458, 17.946], [59708.462592, 17.855], [59711.462337, 17.961], [59713.402326, 17.877],
                #      [59718.408344, 19.429], [59718.44125, 18.398], [59721.434224, 17.837], [59721.446041, 17.836],
                #      [59723.454074, 17.834], [59725.421886, 17.86], [59727.400011, 17.894], [59731.458715, 17.901],
                #      [59735.401504, 18.035], [59737.297615, 17.88], [59739.436018, 17.921], [59741.377002, 17.839],
                #      [59743.456875, 17.878], [59748.367106, 19.919], [59750.359479, 18.017], [59755.358402, 17.891],
                #      [59759.340011, 18.96], [59761.378182, 18.125], [59763.33728, 18.568], [59765.357175, 17.937],
                #      [59772.336562, 17.946], [59772.435752, 17.886], [59774.396261, 17.968], [59776.352627, 18.026],
                #      [59776.359328, 18.035], [59779.290335, 17.872], [59779.330949, 17.843], [59783.371516, 17.873],
                #      [59785.308368, 18.0], [59787.315347, 17.997], [59789.34081, 19.223], [59794.28875, 17.866],
                #      [59797.315694, 17.869], [59800.412905, 17.874], [59802.25309, 18.033], [59805.297974, 17.849],
                #      [59811.328032, 17.858], [59813.24258, 17.987], [59815.287361, 18.412], [59817.213078, 17.94],
                #      [59819.243969, 18.177], [59821.23471, 17.896], [59823.257731, 17.894], [59825.31787, 17.866],
                #      [59827.315856, 17.932], [59842.205694, 17.869], [59844.16603, 17.829], [59846.152789, 17.868],
                #      [59848.169872, 17.86], [59850.145694, 17.925], [59852.171469, 17.907], [59856.175173, 19.458],
                #      [59858.184328, 18.038], [59860.161365, 18.084], [59867.165671, 17.922], [59870.172893, 17.858],
                #      [59873.161446, 17.97], [59881.23993, 17.899], [59883.122106, 17.871], [59888.10993, 17.852],
                #      [59897.173865, 18.022], [59899.112662, 18.051], [59903.145185, 17.95], [59905.131886, 17.874],
                #      [59909.100902, 17.956], [59913.129756, 17.923], [59987.563205, 17.845], [59987.565601, 17.994],
                #      [59993.558148, 17.916], [59993.56059, 17.846], [59993.56302, 17.846], [59994.554641, 18.008],
                #      [59994.557071, 17.996], [59994.559513, 17.877], [59994.561955, 17.929], [59996.552152, 18.01],
                #      [59996.554513, 17.938], [59996.556875, 17.976], [59996.559247, 18.058], [59996.561608, 17.949]]
                #
                # data_light = []
                # data_light.append([a, "ZTF g"])
                # grf = makeGrapf(data_light, name="sdfs").make()
                num_files = len([f for f in os.listdir(save_dir)
                                 if os.path.isfile(os.path.join(save_dir, f))])
                curve_name=values["coordinates"][0:5].replace(" ","")+str(tame.year)+values["name"][1:5].replace(" ","")+str(tame.month)+values["coordinates"][7:13].replace(" ","")+str(num_files)+".png"
                curve_name = curve_name.replace("+","")
                grf.savefig(os.path.join(save_dir, curve_name))
                grf.close()
                curve_path = "media/curve/{}/{}/{}/{}".format(tame.year, tame.month, tame.day, curve_name)

                data = {
                    "form": form,
                    "menu": menu,
                    "title":"Главная страница",
                    "values":values,
                    "curve":curve_path,
                    "names":o_names,
                    "period":per,
                    "epoch":epoch,
                    "magn":magn,
                    "eclipse":eclipse,
                    "show_btn": True,
                }

                if request.user.is_authenticated:
                    last_star = Last_Stars()
                    last_star.user_id = request.user.id
                    last_star.star_name = values["name"]
                    last_star.coordinates = values["coordinates"]
                    last_star.star_type = values['star_type_value']
                    last_star.light_curve = curve_path[6:]
                    last_star.other_names = ";".join(o_names)
                    last_star.magnitude = magn["min"] + " " + magn["max"]
                    if per:
                        last_star.period = per
                        last_star.epoch = epoch
                        if eclipse:
                            last_star.eclipse = eclipse
                    last_star.save()
                else:
                    rem = Remove_curve()
                    rem.light_curve = curve_path

                return render(request, "WEBAstro/result.html", data)
            else:
                print("errrrrr")
        else:
            star_info = request.POST.get("save").split(";")
            values = {"name": star_info[0], "coordinates": star_info[1], 'star_type_value':star_info[2]}
            form = RequestForm(values)
            o_names = star_info[5][2:-2].split("', '")
            data = {
                "form": form,
                "menu": menu,
                "title": "Главная страница",
                "values": values,
                "curve": star_info[-1],
                "names": o_names,
                "show_btn": False,
            }
            data["magn"] = {"min":star_info[3], "max":star_info[4]}
            if star_info[6] == "None":
                data["period"] = None
                data["epoch"] = None
            else:
                data["period"] = star_info[6]
                data["epoch"] = star_info[7]
            if star_info[8] == "None":
                data["eclipse"] = None
            else:
                data["eclipse"] = star_info[8]
            star = Star()
            star.star_name = star_info[0]
            star.coordinates = star_info[1]
            star.star_type = star_info[2]
            star.light_curve = star_info[-1][6:]
            star.magnitude = star_info[3]+' ' + star_info[4]
            star.other_names = ";".join(o_names)
            if data["period"]:
                star.period = data["period"]
                star.epoch = data["epoch"]
            if data["eclipse"]:
                star.eclipse = data["eclipse"]
            star.user_id = request.user.id
            star.save()
            return render(request, "WEBAstro/result.html", data)
    else:
        form = RequestForm()
    return render(request, "WEBAstro/main_page.html", {"form": form, "menu": menu, "title":"Главная страница", "star_type":star_type})

def PageNotFound(request, exception):
    return HttpResponseNotFound("<h1>Страница не найдена</h1>")

def About(request):
    return render(request, "WEBAstro/about.html", {"menu": menu, "title":"О программе", "about":"Тут будет текст о программе"})

def User(request):
    if request.method == "POST":
        del_star = Star.objects.filter(pk=request.POST.get("del_btn"))[0]
        rem = Remove_curve()
        rem.light_curve = del_star.light_curve
        rem.save()
        del_star.delete()
    stars = Star.objects.filter(user_id = request.user.id)
    last = Last_Stars.objects.filter(user_id = request.user.id)[::-1]
    while len(last)>3:
        rem = Remove_curve()
        rem.light_curve = last[-1].light_curve
        rem.save()
        last_star = last[-1]
        last_star.delete()
        last = last[:-1]
    return render(request, "WEBAstro/user.html", {"menu": menu, "title":"Пользователь", "stars":stars, "last":last})


# def Login(request):
#     return render(request, "WEBAstro/login.html", {"menu": menu, "title":"Пользователь"})

# def Register(request):
#     return render(request, "WEBAstro/register.html", {"menu": menu, "title":"Пользователь"})

def AstroAssistant(request):
    text = """Это приложение является расширенной версией нашего сайта. Оно помогает собирать все необходимые данные для регистрации переменных звезд в каталог VSX (Variable Star Index https://www.aavso.org/vsx/index.php ) и реализует следующие возможности:
                \n  1.	Сбор данных для регистрации.
                2.	Обработка данных для построения графика изменения яркости звезды.
                3.	Составление цветного изображения из снимков неба.
                \n
                Для работы приложения необходимо:
                \n
                1. Стабильное подключение к интернету.
                2. 130 Мб места на жестком диске. Без учета файлов, которые создает программа.
                \n
                Программа создает регистрационные карты - папки, содержащие информацию о звезде в текстовом файле и график изменения яркости звезды. В среднем одина регистрационная карта весит 250 Кб."""
    return render(request, "WEBAstro/download.html", {"menu": menu, "title":"AstroAssistant", "load_text":text})


class RegisterUser(CreateView):
    form_class = RegisterUserForm
    template_name = "WEBAstro/register.html"
    success_url = reverse_lazy("login_page")

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        return dict(list(context.items()))

class LoginUser(LoginView):
    form_class = LoginUserForm
    template_name = "WEBAstro/login.html"

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        return dict(list(context.items()))

    def get_success_url(self):
        return reverse_lazy("home")

def Logout(request):
    logout(request)
    return redirect("login_page")



